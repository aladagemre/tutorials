<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>R on Tutorials by Ahmet Emre Aladağ </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://tutorials.emrealadag.com/tags/r/</link>
    <language>en-us</language>
    <author>Ahmet Emre Aladağ</author>
    
    <updated>Mon, 23 Nov 2015 16:14:21 EET</updated>
    
    <item>
      <title>Running RStudio on Remote Server</title>
      <link>http://tutorials.emrealadag.com/post/running-rstudio-on-remote-server/</link>
      <pubDate>Mon, 23 Nov 2015 16:14:21 EET</pubDate>
      <author>Ahmet Emre Aladağ</author>
      <guid>http://tutorials.emrealadag.com/post/running-rstudio-on-remote-server/</guid>
      <description>&lt;p&gt;In this tutorial, we are going to build a Remote R Server. Following this tutorial, you will be able to run your R codes on a remote server so that it runs more efficiently or it doesn&amp;rsquo;t heat up your laptop. You can read the &lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200552306-Getting-Started&#34;&gt;detailed benefits&lt;/a&gt;. You can use any remote server for this purpose. You can use AWS, DigitalOcean, Scaleway.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Scaleway has currently ARM processors thus require compilation from source code. Also some R packages are not compatible with ARM processors.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download-server/&#34;&gt;RStudio server installation page&lt;/a&gt; for up-to-date version.&lt;/p&gt;

&lt;p&gt;On your server install R-base:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install r-base
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we will install RStudio server. If you processor is 64 bit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install gdebi-core
$ wget https://download2.rstudio.org/rstudio-server-0.99.486-amd64.deb
$ sudo gdebi rstudio-server-0.99.486-amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If it&amp;rsquo;s 32 bit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install gdebi-core
$ wget https://download2.rstudio.org/rstudio-server-0.99.486-i386.deb
$ sudo gdebi rstudio-server-0.99.486-i386.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are using Scaleway, your processor is ARM. So you have to compile RServer on your own. See the &lt;a href=&#34;https://github.com/jrowen/ARM-rstudio-server&#34;&gt;build script&lt;/a&gt; for this purpose. This script was prepared for Chromebook, so you don&amp;rsquo;t have to follow the guideline provided there.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/jrowen/ARM-rstudio-server
$ cd ARM-rstudio-server
$ sh build_rstudio.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can take a while (maybe an hour). You can use nohup or  &lt;a href=&#34;http://askubuntu.com/questions/8653/how-to-keep-processes-running-after-ending-ssh-session&#34;&gt;tmux&lt;/a&gt; to avoid losing your session.&lt;/p&gt;

&lt;p&gt;Check if rstudio-server.service file exists. If it doesn&amp;rsquo;t, copy it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls /etc/systemd/system/rstudio-server.service
$ cp src/cpp/server/extras/systemd/rstudio-server.service /etc/systemd/system/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can start rstudio-server service with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ service rstudio-server start
$ service --status-all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see a + sign in front of rstudio-server. In order to login the web panel, you have to create a custom user.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ adduser michael
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Answer the questions and now you can access your web panel via http://&lt;server-ip&gt;:8787 with your user michael. In this panel, you can use web-based RStudio.&lt;/p&gt;

&lt;p&gt;Some requirements could be Pandoc for Knitting HTML, MySQL Client for RMySQL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install pandoc
$ libmysqlclient-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nevertheless, you may encounter some packages (like caret) being missing due to ARM incompatibility.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
